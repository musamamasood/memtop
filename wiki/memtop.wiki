#summary Displays memory consumption by processes in easy to read way.

= Introduction =

Python script for linux. Intended to help with diagnose and identification which processes uses most of RAM of PC.

Typical situation is when you need to reduce RAM usage of your box. 

It uses output of pmap tool. Use 'pmad -d $PID' and scan last line for 'writeable/private:'.  This number could be interpreted like this: 'If you kill process the overall memory consumption of the box will decrease by this value'. Though, memory management is complicated thing :(

For latest changes (in v 0.9.2) see the bottom of page.


== Example of output ==
One example is better then ten lines of description
{{{
   PID |   private/writ. mem |  command                       22:44:38
       |  current | previous | (truncated)           (waiting 15 min.)
  3343 | 111.9 MB |          | /usr/lib/opera/9.62/opera-styleskulptu
  3283 |  19.8 MB |    ++    | /usr/bin/plasma
  7078 |  18.7 MB |    +     | /usr/bin/pcmanfm
  3292 |  12.4 MB |          | kxkb
  3278 |  11.0 MB |          | ksmserver
  7737 |   9.0 MB |    +++   | python/home/johny/programs/mtvcgui/trun
  3280 |   8.0 MB |    +     | kwin
  3272 |   6.5 MB |          | kded4
  4556 |   3.4 MB |          | /usr/lib/opera/9.62//operapluginwrapper
       RAM usage: |===================    77.6 %

   PID |   private/writ. mem |  command                       22:59:41
       |  current | previous | (truncated)           (waiting 15 min.)
  3343 | 111.9 MB |          | /usr/lib/opera/9.62/opera-styleskulptu
  7078 |  26.9 MB |    +++   | /usr/bin/pcmanfm
  3283 |  19.8 MB |          | /usr/bin/plasma
  3292 |  12.4 MB |          | kxkb
  3278 |  11.0 MB |          | ksmserver
  7737 |   9.0 MB |          | python/home/johny/programs/mtvcgui/trun
  3280 |   8.0 MB |          | kwin
  3272 |   6.5 MB |          | kded4
  4556 |   3.4 MB |          | /usr/lib/opera/9.62//operapluginwrapper
       RAM usage: |====================    78.4 %

   PID |   private/writ. mem |  command                       23:14:44
       |  current | previous | (truncated)           (waiting 15 min.)
  3343 | 111.1 MB |   -      | /usr/lib/opera/9.62/opera-styleskulptu
  7078 |  26.9 MB |          | /usr/bin/pcmanfm
  3283 |  19.8 MB |          | /usr/bin/plasma
  3292 |  12.4 MB |          | kxkb
  3278 |  11.0 MB |          | ksmserver
  7737 |   9.0 MB |          | python/home/johny/programs/mtvcgui/trun
  3280 |   8.0 MB |          | kwin
  3272 |   6.5 MB |          | kded4
  4556 |   3.4 MB |          | /usr/lib/opera/9.62//operapluginwrapper
       RAM usage: |====================    78.1 %
}}}


== Use ==

No installation is needed, just run the script. Available parameters are

-p (number in minutes)   - wait time between iterations

-s graph|numb     - two alternatives how to present mainly data from former iteration

-l $integer       - number of lines - processes to show

-h                - help


Important note: The script should be run as root or you will not get data for processes running under other users.

== Why memtop and not (h)top? ==

Thanks for asking this question. Answer is simple, htop offers mutliple types of memory consumption if you are able to understand them, then it is fine. However, if you want only one single number, memtop is for you. It uses output of pmap command (pmap -d $PID), look at last line for private/writeable data. This is memory that is used only by this one process, regardles if swapped or in RAM. This script gets this numbers and present them in friendly manner.

== Changes in 0.9.2 ==

This is a new version after some 3 years, I "ported" it to python3 (still working with version 2.7 at least) and fixed problems when grepping its output. Sometimes it did not get through pipe at all (I dont understand why) but the main problem wasthat the grep command used to return error "Binary file matches". It showed that names of programs contained binary characters, not visible in console but still affecting grep.

**Any comments welcomed**